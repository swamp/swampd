name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            platform: linux
            arch: x86_64

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            platform: windows
            arch: x86_64

          - os: macos-latest
            target: x86_64-apple-darwin
            platform: darwin
            arch: x86_64

          - os: macos-latest
            target: aarch64-apple-darwin
            platform: darwin
            arch: arm64

    steps:
      - uses: actions/checkout@v4

      - name: Install latest stable Rust
        run: rustup update stable

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Install zip (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install zip

      - name: Build all workspace binaries
        run: cargo fetch --color=always --locked && cargo build --color=always --frozen --profile fast --target ${{ matrix.target }}


      - name: Package binaries into a single “swampd-<platform>-<arch>” archive
        shell: bash
        run: |
          # Define the binaries we want to ship:
          BINARIES=("swampd")

          # Make sure dist/ is clean
          rm -rf dist
          mkdir -p dist

          for BIN in "${BINARIES[@]}"; do
            # Determine the file name (add .exe on Windows)
            if [ "${{ matrix.os }}" = "windows-latest" ]; then
              BIN_NAME="${BIN}.exe"
            else
              BIN_NAME="${BIN}"
            fi

            # Strip debug symbols on non-Windows
            if [ "${{ matrix.os }}" != "windows-latest" ]; then
              strip "target/${{ matrix.target }}/fast/${BIN}"
            fi

            # Copy each compiled binary into dist/
            cp "target/${{ matrix.target }}/fast/${BIN_NAME}" "dist/${BIN_NAME}"
          done

          # Now package all binary files into a single archive “swamp-<platform>-<arch>.*”
          ARCHIVE_BASE="swampd-${{ matrix.platform }}-${{ matrix.arch }}"

          cd dist
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            zip "../${ARCHIVE_BASE}.zip" ./*.exe
          else
            tar czf "../${ARCHIVE_BASE}.tar.gz" ./*
          fi
          cd ..

      - name: Upload Release Asset (current repo)
        uses: softprops/action-gh-release@v2
        with:
          files: |
            swampd-${{ matrix.platform }}-${{ matrix.arch }}.*
